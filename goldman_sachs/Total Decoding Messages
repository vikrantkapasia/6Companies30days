class Solution {
	public:
		int CountWays(string str){
		    // Code here
		    int n = str.size();
		    
		    vector<long long> dp(n+1,0);
		    
		    dp[0]=1;
		    dp[1]= stoi(str.substr(0,1))==0?0:1;
		    
		    
		    for(int i =2;i<=n;i++)
		    {
		        long long singledigit = stoi(str.substr(i-1,1));
		        long long doubledigit = stoi(str.substr(i-2,2));
		        
		        if(singledigit>=1)
		        {
		            dp[i] +=dp[i-1]%(1000000007);
		        }
		        
		        if(doubledigit>=10 && doubledigit<=26)
		        {
		            dp[i] +=dp[i-2]%(1000000007);
		        }
		    }
		    
		    return dp[n]%(1000000007);
		}

};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		string str;
		cin >> str;
		Solution obj;
		int ans = obj.CountWays(str);
		cout << ans << "\n";
	}
	return 0;
}  // } Driver Code Ends
