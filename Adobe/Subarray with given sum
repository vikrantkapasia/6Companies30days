class Solution
{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(int arr[], int n, long long s)
    {
        // Your code here
        long long sum=0;
       vector<int> v;
       
       int p=0,q=0;
       while(p<=n){
           if(sum==s){
               v.push_back(q+1);
               v.push_back(p);
               return v;
           }
            if(sum<s ){
               sum+=arr[p];
               p++;
           }else {
               sum-=arr[q];
               q++;
           }
       }
       v.push_back(-1);
       return v;
    }
};

// { Driver Code Starts.

int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        long long s;
        cin>>n>>s;
        int arr[n];
        const int mx = 1e9;
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        Solution ob;
        vector<int>res;
        res = ob.subarraySum(arr, n, s);
        
        for(int i = 0;i<res.size();i++)
            cout<<res[i]<<" ";
        cout<<endl;
        
    }
	return 0;
}  // } Driver Code Ends
